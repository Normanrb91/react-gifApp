{"version":3,"sources":["components/AddCategory.js","helper/getgifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","className","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","GifGridItem","class","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","c","role","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,QAAU,IAC3BR,EAAcE,GACdC,EAAe,MAMnB,SACI,uBACIM,UAAU,eACVC,YAAY,cACZC,KAAK,OACLC,MAASV,EACTW,SAtBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,8BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,yDAE2CC,UAAUH,GAFrD,sDAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,qBAAKT,UAAU,mBAAf,SACI,sBAAKuB,MAAM,aAAX,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,mBAAGnB,UAAU,OAAb,SAAqBmB,UCHxBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECNwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAInB,CAACpB,IAEIqB,EDbwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACA,oBAAIO,GAAC,EAAL,SAAO3B,IAEFoB,GAEG,qBAAKJ,MAAM,8BAA8BY,KAAK,SAA9C,SACI,sBAAMZ,MAAM,kBAAZ,yBAIR,qBAAKvB,UAAU,iBAAf,SAEIoB,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEUA,GADAA,EAAIC,aErBrBkB,EAAe,WAExB,MAAoC5C,mBAAS,IAA7C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEI,OAEI,mCAEA8C,EACI,sBAAKrC,UAAU,aAAf,UACI,oBAAIA,UAAU,YAAd,qBACA,cAAC,EAAD,CAAaT,cAAeA,IAC5B,uBAEA,cAAC,EAAD,CAA0BgB,SAAU8B,GAAtBA,MAIlB,sBAAKrC,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,qBACA,cAAC,EAAD,CAAaT,cAAeA,IAC5B,6B,MCpBpB+C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e56ded58.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    \r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >= 1){\r\n            setCategories(inputValue);\r\n            setInputValue ('');\r\n        }    \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                className=\"form-control\"\r\n                placeholder=\"Buscar Gifs\"\r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=9&q=${encodeURI(category)}&api_key=sKW8PATDaFT4HaZuRgyAcnVOtUzATuD2`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gif = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gif\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <div class=\"card-body \">\r\n                <img src={url} alt={title} />\r\n                <p className=\"mt-3\">{title}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return(\r\n        <>\r\n        <h2 c>{category}</h2>\r\n\r\n            {loading && \r\n\r\n                <div class=\"spinner-border text-success\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Espere...</span>\r\n                </div>\r\n            }\r\n\r\n            <div className=\"card-grid mb-2\">\r\n            {\r\n                images.map(img =>(\r\n                    <GifGridItem \r\n                         key={img.id}\r\n                         {... img}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n","import { useState, useEffect} from \"react\"\r\nimport { getGifs } from \"../helper/getgifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then( imgs => {\r\n        \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        });\r\n\r\n    },[category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState('');\r\n\r\n        return (\r\n\r\n            <>\r\n            {\r\n            categories ? (\r\n                <div className=\"container \">\r\n                    <h2 className=\"mt-5 mb-3\">Gif App</h2>\r\n                    <AddCategory setCategories={setCategories} />\r\n                    <hr />\r\n                    {\r\n                    <GifGrid key={categories} category={categories} />\r\n                    }\r\n                </div>\r\n            ) :\r\n                <div className=\"container\">\r\n                    <h2 className=\"mt-5 mb-3\">Gif App</h2>\r\n                    <AddCategory setCategories={setCategories} />\r\n                    <hr />\r\n                </div>\r\n            }\r\n\r\n            </>\r\n        );\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}